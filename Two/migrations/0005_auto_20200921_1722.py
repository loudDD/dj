# Generated by Django 3.1.1 on 2020-09-21 09:22

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('Two', '0004_auto_20200921_1622'),
    ]

    operations = [
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=150, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=150)),
                ('last_name', models.CharField(max_length=150)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Book',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('b_name', models.CharField(blank=True, max_length=16, null=True)),
            ],
            options={
                'db_table': 'Book',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookBookinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('pub_date', models.DateField()),
                ('commentcount', models.IntegerField()),
                ('readcount', models.IntegerField()),
            ],
            options={
                'db_table': 'book_bookinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_test', models.CharField(max_length=20)),
                ('votes', models.IntegerField()),
            ],
            options={
                'db_table': 'book_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookCustomerinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(max_length=10)),
                ('c_sex', models.SmallIntegerField()),
                ('c_cost', models.FloatField()),
            ],
            options={
                'db_table': 'book_customerinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookPeopleinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('gender', models.IntegerField()),
            ],
            options={
                'db_table': 'book_peopleinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='BookQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quesion_test', models.CharField(max_length=50)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'book_question',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.PositiveSmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterDeltest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('d_name', models.CharField(max_length=10)),
                ('d_cost', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'register_deltest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='RegisterRegisterinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=10)),
                ('password', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'register_registerinfo',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SessiontestSessiontest',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_name', models.CharField(max_length=10, unique=True)),
                ('s_password', models.CharField(max_length=20)),
                ('s_token', models.CharField(max_length=256)),
            ],
            options={
                'db_table': 'sessionTest_sessiontest',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentsClassList',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('c_name', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'students_class_list',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='StudentsStudents',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('s_name', models.CharField(max_length=30)),
                ('s_gender', models.SmallIntegerField()),
            ],
            options={
                'db_table': 'students_students',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoAnimal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('a_name', models.CharField(max_length=10)),
            ],
            options={
                'db_table': 'Two_animal',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoIdcard',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_num', models.CharField(max_length=18, unique=True)),
            ],
            options={
                'db_table': 'Two_idcard',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoIdcardIdPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'Two_idcard_id_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoPerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('p_name', models.CharField(max_length=16)),
                ('p_sex', models.IntegerField()),
            ],
            options={
                'db_table': 'Two_person',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoteChoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('choice_text', models.CharField(max_length=30)),
                ('votes', models.IntegerField()),
            ],
            options={
                'db_table': 'vote_choice',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='VoteQuestion',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question_text', models.CharField(max_length=50)),
                ('pub_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'vote_question',
                'managed': False,
            },
        ),
        migrations.RemoveField(
            model_name='cat',
            name='animal_ptr',
        ),
        migrations.RemoveField(
            model_name='dog',
            name='animal_ptr',
        ),
        migrations.RemoveField(
            model_name='idcard',
            name='id_person',
        ),
        migrations.CreateModel(
            name='TwoCat',
            fields=[
                ('animal_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Two.twoanimal')),
                ('d_eat', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Two_cat',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='TwoDog',
            fields=[
                ('animal_ptr', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, primary_key=True, serialize=False, to='Two.twoanimal')),
                ('d_leg', models.CharField(max_length=20)),
            ],
            options={
                'db_table': 'Two_dog',
                'managed': False,
            },
        ),
        migrations.DeleteModel(
            name='Animal',
        ),
        migrations.DeleteModel(
            name='cat',
        ),
        migrations.DeleteModel(
            name='dog',
        ),
        migrations.DeleteModel(
            name='IDCard',
        ),
        migrations.DeleteModel(
            name='Person',
        ),
    ]
